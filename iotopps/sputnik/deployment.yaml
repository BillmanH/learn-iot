apiVersion: apps/v1
kind: Deployment
metadata:
  name: sputnik
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sputnik
  template:
    metadata:
      labels:
        app: sputnik
    spec:
      containers:
      - name: sputnik
        image: <YOUR_REGISTRY>/sputnik:latest
        env:
        # IMPORTANT: When accessing services across namespaces in Kubernetes,
        # always use the fully qualified domain name (FQDN):
        # format: service-name.namespace.svc.cluster.local
        - name: MQTT_BROKER
          value: "aio-broker.azure-iot-operations.svc.cluster.local"  # Azure IoT Operations MQTT broker in azure-iot-operations namespace
        - name: MQTT_PORT
          value: "18883"  # MQTTS port for Azure IoT Operations broker
        - name: MQTT_TOPIC
          value: "sputnik/beep"
        - name: BEEP_INTERVAL
          value: "5"  # Send beep every 5 seconds
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: MQTT_CLIENT_CERT
          value: "/certs/client.crt"
        - name: MQTT_CLIENT_KEY
          value: "/certs/client.key"
        - name: MQTT_CA_CERT
          value: "/certs/ca.crt"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - python3
            - -c
            - "import os; exit(0 if os.path.exists('/proc/1') else 1)"
          initialDelaySeconds: 10
          periodSeconds: 30
        volumeMounts:
        - name: mqtt-certs
          mountPath: "/certs"
          readOnly: true
      volumes:
      - name: mqtt-certs
        secret:
          secretName: aio-mqtt-certs  # This secret should contain the certificates
